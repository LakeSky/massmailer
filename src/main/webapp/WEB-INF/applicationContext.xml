<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.3.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
    
<mvc:annotation-driven/>
    
 

    <context:component-scan base-package="com.pepaproch.massmailmailer.service"/>
    <context:component-scan base-package="com.pepaproch.massmailmailer.controlers"/>
    <context:component-scan base-package="com.pepaproch.massmailmailer.mail"/>
      <context:component-scan base-package="com.pepaproch.massmailmailer.security"/>
    
    <jpa:repositories base-package="com.pepaproch.massmailmailer.repository"  transaction-manager-ref="txManager" />
    
    <jpa:repositories base-package="com.pepaproch.massmailmailer.security"  transaction-manager-ref="txManager" />
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="en_Us" />
    </bean>
  

  

    <bean id="appMassMailer" class="org.springframework.beans.factory.config.PropertiesFactoryBean" >
        <property name="locations">
            <list>
                <value>classpath:appconfig/massmailerconfig.properties</value>
            </list>
        </property>
        
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="appMassMailer" />
    </bean>
    

    
<!--    <jdbc:embedded-database id="embeddedDataSource" type="DERBY" />
    
    <jdbc:initialize-database data-source="embeddedDataSource" ignore-failures="DROPS">
        <jdbc:script location="classpath:db/schema.sql"/>
        <jdbc:script location="classpath:db/data.sql"/>
    </jdbc:initialize-database>-->
    



    <bean name="persistenceUnitManager"
          class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="defaultDataSource" ref="dataSource" />   
    </bean>
    

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver" />
        <property name="url" value="jdbc:postgresql://reportserver:5432/massmailler" />
        <property name="username" value="massmailler" />
        <property name="password" value="massmailler" />
    </bean>
    


    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="com.pepaproch_MassMailMailerPU" />
        <property name="persistenceUnitManager" ref="persistenceUnitManager"/>

    </bean>
 
 
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    


    
    
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true" />


    <mongo:db-factory id="mongDbFactory"
                      host="reportserver"
                      port="27017"
                      dbname="massmailler"
                      username="massmailler"
                      password="massmailler"/>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongDbFactory"/>
    </bean>
    <mongo:repositories base-package="com.pepaproch.massmailmailer.mongo.repository" />


  
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    <bean id="convertService" class="com.pepaproch.massmailmailer.controlers.ConvertService" 
          init-method="startManager" destroy-method="stopManager"/>
   
   
    
   
    
    <!-- Username and Password Credentials to access restful service -->
    <bean id="credentials" class="org.apache.http.auth.UsernamePasswordCredentials">
        <constructor-arg name="userName">
            <value>api</value>
        </constructor-arg>
        <constructor-arg name="password">
            <value>key-4gejiublrcrau0mnopgtae272ca5hof1</value>
        </constructor-arg>
    </bean>



 
    <bean id="httpClientFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"> 
        <constructor-arg ref="httpClient"/> 

    </bean>
    


    <bean id="httpClient" class="org.apache.http.impl.client.DefaultHttpClient" />
  
    
    
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">

        <constructor-arg ref="httpClientFactory" />
   

        <property name="interceptors">
            <list>
                <bean id="restTemplateBasicAuthInterceptor" class="com.pepaproch.massmailmailer.mail.mailgun.BasicAuthInterceptor"> 
                    <constructor-arg ref="credentials"/> 

                </bean>
            </list>
        </property>
    </bean>


          

    
    
    <bean id="poiHandlerFactory" class="com.pepaproch.massmailmailer.poi.PoiHandlerFactoryImpl" />
    
    <task:annotation-driven executor="anotattionExecutor" scheduler="anottationScheduler"/>

    <task:executor id="anotattionExecutor" pool-size="5"/>

    <task:scheduler id="anottationScheduler" pool-size="10"/>
    
    <bean id="userService" class="com.pepaproch.massmailmailer.security.MaillerUserService">
    </bean>
    
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="ThisIsASecretSoChangeMe" />
    </bean>
    


    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userService">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http
        realm="Protected API"
        use-expressions="true"
        auto-config="false"
        create-session="stateless"
        entry-point-ref="unauthorizedEntryPoint"
        authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
   
        <security:intercept-url  pattern="/index.html" access="permitAll" />
        <security:intercept-url  pattern="/app/login" access="permitAll" />
        <security:intercept-url  pattern="/ui/**" access="permitAll" />
        <security:intercept-url  pattern="/stats/**/*" access="hasRole('USER')" />
        <security:intercept-url  pattern="/" access="permitAll" />

    </security:http>

    <bean id="unauthorizedEntryPoint" class="com.pepaproch.massmailmailer.security.UnauthorizedEntryPoint" />

    <bean class="com.pepaproch.massmailmailer.security.TokenFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="userService" />
    </bean>
    
    <bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
        <constructor-arg ref="roleHierarchy" />
    </bean>
    <bean id="roleHierarchy"
          class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <property name="hierarchy">
            <value>
                ROLE_ADMIN > ROLE_USER
            </value>
        </property>
    </bean>

    <bean id="contextApplicationContextProvider" class="com.pepaproch.massmailmailer.controlers.ApplicationContextProvider"/>
    
</beans>
